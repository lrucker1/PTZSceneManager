
https://help.ptzoptics.com/support/solutions/articles/13000066852-ptzoptics-control-and-live-preview-for-android-devices

https://help.ptzoptics.com/support/solutions/articles/13000074716-accessing-the-rtsp-feed-of-a-ptzoptics-camera

 
 Export the settings to something readable. Even if that turns out to be settings.ini.

Yes! obs-websocket to find out which camera is hot. And works with the plugin in 2.7.

Prefs:
   Brand/Model specific stuff:
   max preset, reserved presets
   has livestream, livestream URL, URL format
      PTZOptics rtsp://[ipaddress]:554/1 (and a /2 for hdmi?)
      and if it's html?
   has website, ditto.
      PTZOptics [ipaddress]:8080
   snapshot URL
      PTZOptics [ipaddress]:80/snapshot.jpg
   any other notable divergence from Sony, like OSD toggle.
   delay needed between start move and stop, esp for OSD.

Configure cameras:
 - set PTZOptics brand or not.

Add Export to PacketSender to this app.

Lock scene name editing - part of the whole UI lock? "Lock UI" menu item?
 only if someone wants it in beta

Get the camera's actual aspect ratio for the live view constraint? 16:9 is the current default.
snapshot.jpg resolution options: 1920x1080 (16:9, 1.777) 960x600 (8:5, 1.6) 480x300 (1.6)

Pluggable controls:
Instead of the "Low light/sports day/night", have user-definable light settings. Like "Candles".
Also transition effects, like "relative zoom in".
  - alas, even the slowest zoom speed is way too fast.
  - a "record mode", that computes the difference between two scenes and saves just that change? Future.
Auto sharpness?
Preset speed?
 - Scene-specific local saves for presetRecall & anything else with no inq.
Focus lock/unlock - not in Sony?
PTZ Advanced View:
 Exposure mode dependent:
    Shutter speed up/down
    Iris brighter/darker
    Brightness up/down
 Image Color: Luminance Contrast Hue
    and show meaningful values, sheesh.

Range copy (recall/set) in Camera Scenes. Also range overlap check - intersectsIndexesInRange
Progress dialog for snapshot import... actually it's pretty fast. Keep it around for when we do range copy.

Observe USB device add/remove for camera scene windows- only if we have one. Although given that we can't do that at all for IP cams (actually, we could, but more research is needed), it's very optional. OTOH - disconnecting and reconnecting IP is fast. USB takes some time between power on and it actually being available.

ArrayController in CameraList. It's so close. OTOH, it does work.
Check whether the NSViewController commitEditing actually does work, given that discard works. Also Apply/Revert should turn on once changes happen.

Test importing a second different/overlapping set of cameras.

camlist & prefs window restoration

Clean up delete pref values (after undo is no longer possible)

OBS is paying attention to the USB port address (or tty?), which matters if there are multiple cameras with the same name.
 Weak link from Camera to PrefCamera
 Save the tty to prefs, if it can't be opened and there's only one USB device assume it's the same one and update.
 UI update: OBS obviously is just going to pop up a list of "USB Dev Name", going by what happened when I plugged it into a different port: it showed one grayed-out "USB Dev" and one non-gray. We can probably do better.
